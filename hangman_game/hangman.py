from random import choice

# –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –¥–ª—è –∏–≥—Ä—ã
word_list = [
    "–∞–±–∞–∂—É—Ä", "–∞–±—Ä–∏–∫–æ—Å", "–∞–≤–∞—Ä–∏—è", "–∞–¥—Ä–µ—Å", "–∞–≥–µ–Ω—Ç", "–∞–∑–±—É–∫–∞", "–∞–∫–∞–¥–µ–º–∏—è", "–∞–∫–≤–∞—Ä–∏—É–º", "–∞–∫—É–ª–∞", "–∞–ª—Ö–∏–º–∏–∫",
    "–∞–º–±–∞—Ä", "–∞–º—Ñ–∏–±–∏—è", "–∞–Ω–≥–µ–ª", "–∞–Ω—Ç–µ–Ω–Ω–∞", "–∞–ø–µ–ª—å—Å–∏–Ω", "–∞—Ä–±—É–∑", "–∞—Ä–∫–∞", "–∞—Ä–º–∏—è", "–∞—Ä—Ñ–∞", "–∞—Å—Ñ–∞–ª—å—Ç",
    "–∞—Ç–æ–º", "–∞—Ñ–∏—à–∞", "–±–∞–∫–ª–∞–∂–∞–Ω", "–±–∞–ª–∫–æ–Ω", "–±–∞–Ω–∫–∞", "–±–∞—Ä—Å—É–∫", "–±–∞—à–Ω—è", "–±–µ–≥–µ–º–æ—Ç", "–±–µ—Ä–µ–∑–∞", "–±–∏–Ω–æ–∫–ª—å",
    "–±–∏—Å–µ—Ä", "–±–ª—é–¥–æ", "–±–æ–ª–æ—Ç–æ", "–±–æ—Ç–∏–Ω–æ–∫", "–±—Ä–∞—Å–ª–µ—Ç", "–±—Ä–µ–≤–Ω–æ", "–±—Ä–æ–Ω—è", "–±—Ä–æ—à—é—Ä–∞", "–±—É–¥–∫–∞", "–±—É–π–≤–æ–ª",
    "–±—É–ª–∫–∞", "–±—É—Ç–æ–Ω", "–≤–∞—Ñ–ª—è", "–≤–µ–¥—Ä–æ", "–≤–µ—Å–ª–æ", "–≤–µ—Ç–∫–∞", "–≤–µ—Ç–µ—Ä", "–≤–∏–ª–∫–∞", "–≤–∏—à–Ω—è", "–≤–æ–∫–∑–∞–ª",
    "–≤–æ–ª–Ω–∞", "–≤–æ—Ä–æ–Ω–∞", "–≤–æ–ª–æ—Å—ã", "–≤–æ—Å—Ç–æ–∫", "–≤—Ä–µ–º—è", "–≤—å—é–≥–∞", "–≥–ª–∏–Ω–∞", "–≥–ª–æ–±—É—Å", "–≥–æ–ª—É–±—å", "–≥–æ—Ä–∞",
    "–≥–æ—Ä–æ–¥", "–≥—Ä–æ–∑–∞", "–¥–≤–µ—Ä—å", "–¥–∏–≤–∞–Ω", "–¥–æ–∂–¥—å", "–¥–æ—Å–∫–∞", "–¥–æ—á–∫–∞", "–¥—Ä–∞–∫–æ–Ω", "–¥—Ä—É–≥", "–¥—É–¥–∫–∞",
    "–∂–∏—Ä–∞—Ñ", "–∂—É—Ä–Ω–∞–ª", "–∑–∞–≤—Ç—Ä–∞–∫", "–∑–∞–≤–æ–¥", "–∑–∞–±–æ—Ä", "–∑–∞–∫–∞—Ç", "–∑–∞–º–æ–∫", "–∑–∞–Ω–∞–≤–µ—Å", "–∑–∞–ø–∏—Å—å", "–∑–∞—Ä—è–¥",
    "–∑–µ–±—Ä–∞", "–∑–µ–ª–µ–Ω—å", "–∑–µ–º–ª—è", "–∑–µ—Ä–∫–∞–ª–æ", "–∑–Ω–∞–Ω–∏–µ", "–∏–≥–ª–∞", "–∏–≥—Ä—É—à–∫–∞", "–∏–∑–±–∞", "–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç", "–∏–Ω–¥—é–∫",
    "–∏–∫–æ–Ω–∞", "–∏—Å—Ç–æ—Ä–∏—è", "–∫–∞–±–∞–Ω", "–∫–∞–±–µ–ª—å", "–∫–∞–ª–∏—Ç–∫–∞", "–∫–∞–º–µ–Ω—å", "–∫–∞–Ω–∞—Ç", "–∫–∞–ø–ª—è", "–∫–æ—Ä–∞–±–ª—å", "–∫–æ—Ä–æ–±–∫–∞",
    "–∫–æ—Ä–æ–≤–∞", "–∫–æ—Å—Ç–µ—Ä", "–∫–æ—Ç–µ–ª", "–∫–æ—Ç–∏–∫", "–∫—Ä–∞—Å–∫–∞", "–∫—Ä–µ—Å—Ç", "–∫—Ä–æ–ª–∏–∫", "–∫—Ä—ã—à–∞", "–∫—É–±–æ–∫", "–∫—É—Å—Ç",
    "–∫—É—Ä–∏—Ü–∞", "–∫—É—Ä—Å", "–ª–∞–≤–∞", "–ª–∞–≤–∫–∞", "–ª–∞–º–ø–∞", "–ª–∞–ø–∞", "–ª–∞—Å—Ç–æ—á–∫–∞", "–ª–µ—Å", "–ª–µ—Å—Ç–Ω–∏—Ü–∞", "–ª–∏—Ü–æ",
    "–ª–æ–¥–∫–∞", "–ª–æ–∂–∫–∞", "–º–∞–ª–∏–Ω–∞", "–º–∞–ª—å—á–∏–∫", "–º–∞—Å–∫–∞", "–º–∞—Å—Ç–µ—Ä", "–º–∞—Ç—Ä–æ—Å", "–º–µ–¥–≤–µ–¥—å", "–º–µ–ª—å–Ω–∏—Ü–∞", "–º–µ—á—Ç–∞",
    "–º–∏—à–∫–∞", "–º–æ–ª–æ—Ç", "–º–æ–ª–æ–∫–æ", "–º–æ—Ä–∫–æ–≤—å", "–º–æ—Ä–æ–∑", "–º–æ—Å—Ç–∏–∫", "–º–æ—Ç–æ—Ä", "–º—Ä–∞–º–æ—Ä", "–º—Ä–∞–∫", "–º—ã–ª–æ",
    "–º—è—Å–æ", "–º—ã—à–∫–∞", "–Ω–µ–¥–µ–ª—è", "–Ω–µ–≤–æ–¥", "–Ω–æ—á—å", "–æ–±–ª–∞–∫–æ", "–æ–±—É–≤—å", "–æ–≤–æ—â–∏", "–æ–≤—Ü–∞", "–æ–≥–æ–Ω—å",
    "–æ–¥–µ–∂–¥–∞", "–æ–∫–Ω–æ", "–æ–ª–µ–Ω—å", "–æ—Ä–µ—Ö", "–æ—Å—Ç—Ä–æ–≤", "–æ—Ö–æ—Ç–∞", "–æ—á–∫–∏", "–ø–∞–∫–µ—Ç", "–ø–∞–ª–∫–∞", "–ø–∞–º—è—Ç—å",
    "–ø–∞—Ä–æ—Ö–æ–¥", "–ø–∞—Ä–µ–Ω—å", "–ø–∞—Ä—Ç–∞", "–ø–∞—Å—Ç—É—Ö", "–ø–∞—É–∫", "–ø–µ–Ω–∞", "–ø–µ—Å–æ–∫", "–ø–µ—á–∫–∞", "–ø–∏–∞–Ω–∏–Ω–æ", "–ø–∏–ª–∞",
    "–ø–∏—Å—å–º–æ", "–ø–∏—Ü—Ü–∞", "–ø–ª–∞–Ω–µ—Ç–∞", "–ø–ª–∞—Ç—å–µ", "–ø–ª–∏—Ç–∞", "–ø–ª–æ–¥", "–ø–ª—É–≥", "–ø–æ–≥–æ–¥–∞", "–ø–æ–¥—É—à–∫–∞", "–ø–æ–µ–∑–¥",
    "–ø–æ—ç–∑–∏—è", "–ø–æ–ª–µ", "–ø–æ–ª–∫–∞", "–ø–æ–ª–æ—Å–∞", "–ø–æ—Ä–æ–≥", "–ø–æ—Ä—Ç—Ñ–µ–ª—å", "–ø–æ—á—Ç–∞", "–ø—Ä–∞–≤–¥–∞", "–ø—Ä–∞–∑–¥–Ω–∏–∫", "–ø—Ä–µ–¥–º–µ—Ç",
    "–ø—Ä—è–Ω–∏–∫", "–ø—á–µ–ª–∞", "–ø—è—Ç–Ω–æ", "—Ä–µ–∫–∞", "—Ä–µ–º–µ–Ω—å", "—Ä–µ–ø–∫–∞", "—Ä–µ—á—å", "—Ä–æ—â–∞", "—Ä—É–±–ª—å", "—Ä—É–±–∞—à–∫–∞",
    "—Ä—É–∫–∞", "—Ä—É—á–∫–∞", "—Ä—ã–±–∞", "—Ä—ã–Ω–æ–∫", "—Å–∞–¥–∏–∫", "—Å–∞–Ω–∏", "—Å–∞—Ö–∞—Ä", "—Å–≤–µ—Ç", "—Å–≤–µ—á–∞", "—Å–≤–∏–Ω—å—è",
    "—Å–≤–∏—Ç–µ—Ä", "—Å–µ–º—å—è", "—Å–µ—Ä–¥—Ü–µ", "—Å–∏—Ä–µ–Ω—å", "—Å–∫–∞–º—å—è", "—Å–∫–≤–æ—Ä–µ—Ü", "—Å–∫—Ä–∏–ø–∫–∞", "—Å–ª–æ–Ω", "—Å–ª—É—á–∞–π", "—Å–Ω–µ–≥–æ–ø–∞–¥",
    "—Å–æ–±–∞–∫–∞", "—Å–æ–ª–¥–∞—Ç", "—Å–æ–ª–Ω—Ü–µ", "—Å–æ—Ä–æ–∫–∞", "—Å–æ—Å—É–¥", "—Å–æ—Å–µ–¥", "—Å–æ—É—Å", "—Å–ø–æ—Ä—Ç", "—Å—Ç–µ–Ω–∞", "—Å—Ç—É–ª",
    "—Å—Ç–∏–ª—å", "—Å—Ç—É–ø–µ–Ω—å", "—Å—Ü–µ–Ω–∞", "—Å—É–º–∫–∞", "—Å—É–Ω–¥—É–∫", "—Å—É—Ç–∫–∏", "—Ç–∞–±–∞–∫", "—Ç–∞–Ω–µ—Ü", "—Ç–∞—Ä–∞–∫–∞–Ω", "—Ç–∞—Ä–µ–ª–∫–∞",
    "—Ç–µ–Ω—å", "—Ç–µ—Ç—Ä–∞–¥—å", "—Ç–µ—Å—Ç–æ", "—Ç–∏–≥—Ä", "—Ç–æ–ø–æ—Ä", "—Ç–æ—Ä—Ç", "—Ç—Ä–∞–≤–∞", "—Ç—Ä–∞–º–≤–∞–π", "—Ç—Ä—É–±–∞", "—Ç—É–º–∞–Ω",
    "—Ç—É—Ñ–ª—è", "—É–∂–∏–Ω", "—É–ª–∏—Ü–∞", "—É—Ç—Ä–æ", "—É—Ç–∫–∞", "—Ñ–∞–∑–∞–Ω", "—Ñ–∞–π–ª", "—Ñ–∞–∫–µ–ª", "—Ñ–∞—Ä—Ç—É–∫", "—Ñ–∏–≥—É—Ä–∞",
    "—Ñ–∏–ª—å–º", "—Ñ–ª–∞–≥", "—Ñ–æ–Ω–∞—Ä—å", "—Ñ–æ—Ä–º–∞", "—Ñ—Ä—É–∫—Ç", "—Ö–ª–µ–±", "—Ö–æ–±–æ—Ç", "—Ö—Ä–∞–º", "—Ö–≤–æ—Å—Ç", "—Ü–≤–µ—Ç–æ–∫",
    "—Ü–µ–ª—å", "—Ü–∏—Ä–∫", "—Ü–∏—Ñ—Ä–∞", "—á–∞—Å—ã", "—á–∞—à–∫–∞", "—á–µ–ª–æ–≤–µ–∫", "—á–µ—Ä–µ–ø–∞—Ö–∞", "—á–µ—Ä–Ω–∏–ª–∞", "—á–µ—Ä—Ç–µ–∂", "—á–µ—Å–Ω–æ–∫",
    "—á—É–ª–∞–Ω", "—à–∞–ø–∫–∞", "—à–∞—Ä–∏–∫", "—à–∫–∞—Ñ", "—à–∫–æ–ª–∞", "—à–∫—É—Ä–∞", "—à–ª–µ–º", "—à–ª—è–ø–∞", "—à—Ç–æ—Ä–∞", "—â–µ—Ç–∫–∞",
    "—â—É–∫–∞", "—ç–∫—Ä–∞–Ω", "—ç–ª–µ–∫—Ç—Ä–∏—á–∫–∞", "—ç–º–∞–ª—å", "—è–≥—É–∞—Ä", "—è–≥–æ–¥–∞", "—è–∫–æ—Ä—å", "—è–Ω–≤–∞—Ä—å", "—è—Å—Ç—Ä–µ–±", "—è—â–∏–∫",
    "—è–±–ª–æ–∫–æ", "—è—Ä–º–∞—Ä–∫–∞"
]


# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∏—Å–µ–ª–∏—Ü—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–æ–ø—ã—Ç–æ–∫
def display_hangman(tries):
    stages = [  
                # —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: –≥–æ–ª–æ–≤–∞, —Ç–æ—Ä—Å, –æ–±–µ —Ä—É–∫–∏, –æ–±–µ –Ω–æ–≥–∏
                '''
                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  
                    |     |  
                    |    üíÄ  
                    |    /|\\  
                    |     |  
                    |    / \\  
                    ‚îÄ‚îÄ  
                ''',
                # –≥–æ–ª–æ–≤–∞, —Ç–æ—Ä—Å, –æ–±–µ —Ä—É–∫–∏, –æ–¥–Ω–∞ –Ω–æ–≥–∞
                '''
                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  
                    |     |  
                    |    üòµ  
                    |    /|\\  
                    |     |  
                    |    /   
                    ‚îÄ‚îÄ 
                ''',
                # –≥–æ–ª–æ–≤–∞, —Ç–æ—Ä—Å, –æ–±–µ —Ä—É–∫–∏
                '''
                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  
                    |     |  
                    |    üò®  
                    |    /|\\  
                    |     |  
                    |  
                    ‚îÄ‚îÄ
                ''',
                # –≥–æ–ª–æ–≤–∞, —Ç–æ—Ä—Å –∏ –æ–¥–Ω–∞ —Ä—É–∫–∞
                '''
                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  
                    |     |  
                    |    üòü  
                    |    /|  
                    |     |  
                    |  
                    ‚îÄ‚îÄ
                ''',
                # –≥–æ–ª–æ–≤–∞ –∏ —Ç–æ—Ä—Å
                '''
                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  
                    |     |  
                    |    üòï  
                    |     |  
                    |     |  
                    |
                    ‚îÄ‚îÄ
                ''',
                # –≥–æ–ª–æ–≤–∞
                '''
                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  
                    |     |  
                    |    üòê  
                    |  
                    |  
                    |
                    ‚îÄ‚îÄ
                ''',
                # –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                '''
                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  
                    |     |  
                    |
                    |  
                    |  
                    |  
                    ‚îÄ‚îÄ
                '''
    ]
    return stages[tries]


# –§—É–Ω–∫—Ü–∏—è –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ –∏–∑ —Å–ø–∏—Å–∫–∞
def get_word():
    return choice(word_list).upper()


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≤–≤–æ–¥–∞
def checking_answer(answer):
    while not answer or not answer.isalpha():
        answer = input('–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç (–±—É–∫–≤–∞/—Å–ª–æ–≤–æ)! ')
    return answer


# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏–≥—Ä—ã
def hangman(word):
    word_completion = '_' * len(word)
    guessed_letters = []  # –£–∂–µ –Ω–∞–∑–≤–∞–Ω–Ω—ã–µ –±—É–∫–≤—ã
    guessed_words = []    # –£–∂–µ –Ω–∞–∑–≤–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
    tries = 6             # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
    word_completion = list(word_completion)

    print(display_hangman(tries))
    print(''.join(word_completion))

    while tries > 0 and '_' in word_completion:
        answer = checking_answer(input('–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É –∏–ª–∏ —Å–ª–æ–≤–æ: ').upper()) # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print()
        
        if len(answer) == 1:  # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–∞ –±—É–∫–≤–∞
            if answer in guessed_letters:
                print('–í—ã —É–∂–µ —ç—Ç–æ –≤–≤–æ–¥–∏–ª–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!')
            elif answer in word:  # –ë—É–∫–≤–∞ —É–≥–∞–¥–∞–Ω–∞
                for i in range(len(word)):
                    if answer == word[i]:
                        word_completion[i] = answer
            else:  # –ë—É–∫–≤—ã –Ω–µ—Ç –≤ —Å–ª–æ–≤–µ
                print('–ú–∏–º–æ!')
                tries -= 1
            guessed_letters.append(answer)
        else:  # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ —Å–ª–æ–≤–æ
            if answer in guessed_words:
                print('–í—ã —É–∂–µ —ç—Ç–æ –≤–≤–æ–¥–∏–ª–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!')
            elif answer == word:  # –°–ª–æ–≤–æ —É–≥–∞–¥–∞–Ω–æ
                word_completion = list(word)
            else:  # –°–ª–æ–≤–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ
                print('–ù–µ —É–≥–∞–¥–∞–ª–∏!')
                tries -= 1
                guessed_words.append(answer)

        print(display_hangman(tries))    # –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∏—Å–µ–ª–∏—Ü—ã
        print(''.join(word_completion))  # –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–ª–æ–≤–∞
        
        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã
        if tries == 0:
            print(f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üòï. –°–ª–æ–≤–æ: {word}')
            return
        if not '_' in word_completion:
            print('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏! üéâ')
            return


# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã
def play():
    print('–î–∞–≤–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ —É–≥–∞–¥–∞–π–∫—É —Å–ª–æ–≤!')
    hangman(get_word())
    while True:
        answer = input('–ñ–µ–ª–∞–µ—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? (–¥–∞/–Ω–µ—Ç) ').lower()
        while not answer in ['–¥–∞', '–Ω–µ—Ç']:  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞
            answer = input('–í–≤–µ–¥–∏—Ç–µ "–¥–∞" –∏–ª–∏ "–Ω–µ—Ç"! ').lower()
        if answer == '–¥–∞':
            hangman(get_word())
        else:
            break
    print('–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –µ—â–µ!')


# –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
play()
